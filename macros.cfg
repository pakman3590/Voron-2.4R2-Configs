#####################################################################
#   Macros
#####################################################################

####################
# Custom Movements #
####################

[gcode_macro PARK]
gcode:
    {% set th = printer.toolhead %}
    G0 X{th.axis_maximum.x//2} Y{th.axis_maximum.y//2} Z30

[gcode_macro G32]
gcode:
    SAVE_GCODE_STATE NAME=STATE_G32
    STATUS_HOMING
    G90
    G28
    STATUS_LEVELING
    QUAD_GANTRY_LEVEL
    STATUS_BUSY
    SMART_PARK
    RESTORE_GCODE_STATE NAME=STATE_G32

###################
# Print Start/End #
###################

[gcode_macro PRINT_START]
#   Use PRINT_START for the slicer starting script - please customise for your slicer of choice
gcode:
    EXCLUDE_OBJECT_DEFINE
    {% set TARGET_BED       = params.BED|int %}
    {% set TARGET_HOTEND    = params.HOTEND|int %}
    {% set MATERIAL         = params.MATERIAL|string %}
    RESPOND PREFIX="" TYPE=echo MSG="Detected filament type: {MATERIAL}" COLOR=info
    M117 Pre-heating bed + hotend
    STATUS_HEATING
    M140 S{TARGET_BED}			                ; set bed to slicer temp
    M109 S150				                    ; set hotend to probe temp
    M117 Homing + leveling gantry
    G32					                        ; home and level gantry
    G90
    M117 Calibrate bed mesh
    BED_MESH_CALIBRATE 			                ; perform adaptive bed mesh calibration
    G90                          	            ; absolute positioning
    G1 Z20 F3000                   	            ; move nozzle away from bed
    M117 Heating hotend to print temp
    STATUS_HEATING
    M109 S{TARGET_HOTEND}			            ; set hotend to slicer temp
    M117 Scrub + Purge
    CLEAN_NOZZLE                                ; scrub nozzle and purge
    G90
    LINE_PURGE
    M117
    NEVERMORE_ON MATERIAL={MATERIAL}            ; checks if filament type is ABS and turns on Nevermore
    STATUS_PRINTING

[gcode_macro PRINT_END]
#   Use PRINT_END for the slicer ending script - please customise for your slicer of choice
gcode:
    # safe anti-stringing move coords
    {% set th = printer.toolhead %}
    {% set x_safe = th.position.x + 20 * (1 if th.axis_maximum.x - th.position.x > 20 else -1) %}
    {% set y_safe = th.position.y + 20 * (1 if th.axis_maximum.y - th.position.y > 20 else -1) %}
    {% set z_safe = [th.position.z + 2, th.axis_maximum.z]|min %}

    SAVE_GCODE_STATE NAME=STATE_PRINT_END

    M400                                        ; wait for buffer to clear
    G92 E0                                      ; zero the extruder
    G1 E-5.0 F1800                              ; retract filament

    TURN_OFF_HEATERS

    G90                                         ; absolute positioning
    G0 X{x_safe} Y{y_safe} Z{z_safe} F20000     ; move nozzle to remove stringing
    G0 X{th.axis_maximum.x//2} Y{th.axis_maximum.y - 2} F3600  ; park nozzle at rear
    M107                                        ; turn off part cooling fan
    NEVERMORE_TIMER_START                       ; starts post-print shutoff timer for Nevermore
    CLEAN_NOZZLE                                ; scrub nozzle
    M18 X Y                                     ; disable X/Y to prevent gantry crash

    BED_MESH_CLEAR
    RESTORE_GCODE_STATE NAME=STATE_PRINT_END
    STATUS_OFF
    M117 Print Completed

#####################
# Nevermore Control #
#####################

[gcode_macro NEVERMORE_ON]
gcode:
    {% set MATERIAL    = params.MATERIAL|string %}
    {% if MATERIAL     == "ABS" %}
        RESPOND PREFIX="" TYPE=echo MSG="Using ABS, Nevermore starting" COLOR=info
        SET_FAN_SPEED FAN=nevermore_fan SPEED=1
    {% else %}
        RESPOND PREFIX="" TYPE=echo MSG="Using {MATERIAL}, Nevermore not needed" COLOR=info
    {% endif %}

[gcode_macro NEVERMORE_OFF]
gcode:
    RESPOND PREFIX="" TYPE=echo MSG="Nevermore shutdown" COLOR=info
    SET_FAN_SPEED FAN=nevermore_fan SPEED=0

[gcode_macro NEVERMORE_TIMER_START]
gcode:
    NEVERMORE_TIMER_CANCEL
    RESPOND PREFIX="" TYPE=echo MSG="Nevermore fan auto-shutoff in 900s" COLOR=success
    UPDATE_DELAYED_GCODE ID=NEVERMORE_TIMER_END DURATION=900

[delayed_gcode NEVERMORE_TIMER_END]
gcode:
    NEVERMORE_OFF

[gcode_macro NEVERMORE_TIMER_CANCEL]
gcode:
    UPDATE_DELAYED_GCODE ID=NEVERMORE_TIMER_END DURATION=0

#####################
# Console Messaging #
#####################

# Modifies the RESPOND command. Ex:
# RESPOND PREFIX=<prefix> TYPE=<type> MSG="<msg>" COLOR=<color>
# Valid types: 'echo', 'echo_no_space', 'command', 'error'
# Valid colors: 'primary', 'secondary', 'accent', 'info', 'success', 'error', 'warning'

[gcode_macro RESPOND]
rename_existing: BASE_RESPOND
gcode:
    {% set colors = ('primary', 'secondary', 'accent', 'info', 'success', 'error', 'warning') %}

    {% if params.PREFIX is defined %}
        {% set prefix = 'PREFIX=' + params.PREFIX|string %}
    {% endif %}

    {% if params.TYPE is defined %}
        {% if params.TYPE in ('echo', 'echo_no_space', 'command', 'error') and params.TYPE != '' %}
            {% set type = 'TYPE=' + params.TYPE|string %}
        {% else %}
            BASE_RESPOND TYPE=error MSG="RESPOND TYPE '{params.TYPE}' is invalid. Must be one of 'echo', 'command' or 'error'"
        {% endif %}
    {% endif %}

    {% if params.MSG is defined %}
        {% set msg = 'MSG="'+ params.MSG + '"'|string %}
    {% endif %}

    {% if params.COLOR is defined %}
        {% set color = params.COLOR|lower %}

        {% if color in colors %}
            {% set msg = 'MSG="<span class=' + color + '--text>' + params.MSG + '</span>"'|string %}

        {% else %}
            BASE_RESPOND TYPE=error MSG="RESPOND COLOR '{color}' is invalid. Must be one of 'primary', 'secondary', 'accent', 'info', 'success', 'warning' or 'error'"
        {% endif %}

    {% endif %}
    BASE_RESPOND {prefix} {type} {msg}